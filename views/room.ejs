<!DOCTYPE html>
<!--  This site was created in Webflow. http://www.webflow.com  -->
<!--  Last Published: Wed Oct 25 2017 13:24:09 GMT+0000 (UTC)  -->
<html data-wf-page="59f067da9cd27200014f0cae" data-wf-site="59f067da9cd27200014f0cad">

<head>
  <meta charset="utf-8">
  <title>ChatSocket.io</title>
  <meta content="width=device-width, initial-scale=1" name="viewport">
  <meta content="Webflow" name="generator">
  <link href="css/normalize.css" rel="stylesheet" type="text/css">
  <link href="css/webflow.css" rel="stylesheet" type="text/css">
  <link href="css/chatsocket-io.webflow.css" rel="stylesheet" type="text/css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.js"></script>
  <!-- <script
    type="text/javascript">WebFont.load({ google: { families: ["Open Sans:300,300italic,400,400italic,600,600italic,700,700italic,800,800italic"] } });</script> -->
  <!-- [if lt IE 9]><script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.min.js" type="text/javascript"></script><![endif] -->
  <script
    type="text/javascript">!function (o, c) { var n = c.documentElement, t = " w-mod-"; n.className += t + "js", ("ontouchstart" in o || o.DocumentTouch && c instanceof DocumentTouch) && (n.className += t + "touch") }(window, document);</script>
  <link href="https://daks2k3a4ib2z.cloudfront.net/img/favicon.ico" rel="shortcut icon" type="image/x-icon">
  <link href="https://daks2k3a4ib2z.cloudfront.net/img/webclip.png" rel="apple-touch-icon">
</head>

<body>
  <div class="container w-container">
    <div class="rooms">
      <h1 class="title-rooms">Salas Disponíveis</h1>
      <ul class="room-list w-list-unstyled">
      </ul>
      <div class="add-room">+</div>
    </div>
    <div class="room">
      <div class="messages">

      </div>
      <div class="new-message-form w-form">
        <form class="form">
          <textarea id="msg" name="msg" maxlength="5000" placeholder="Digite sua mensagem e pressione &lt;Enter&gt;"
            autofocus="true" class="msg w-input">
          </textarea>
          <button class="send-audio w-button" id="send-audio">Enviar<br>Áudio</button>
        </form>
      </div>
    </div>
  </div>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js" type="text/javascript"></script>
  <script src="js/webflow.js" type="text/javascript"></script>
  <!-- [if lte IE 9]><script src="https://cdnjs.cloudflare.com/ajax/libs/placeholders/3.0.2/placeholders.min.js"></script><![endif] -->
</body>
<script src='/socket.io/socket.io.js'></script>
<script>
  $(function () {
    const socket = io()
    let selectedRoom = ''
    let audioPermission = false
    let mediaRecorder
    navigator.mediaDevices
      .getUserMedia({ audio: true })
      .then(stream => {
        audioPermission = true
        mediaRecorder = new MediaRecorder(stream)
        let chunks = []
        mediaRecorder.ondataavailable = data => {
          chunks.push(data.data)
        }
        mediaRecorder.onstop = () => {
          // para persistir as mensagens no banco de dados é importante transformar em string.
          // o JSON.stringify() não tem um bom resultado para isso e a opção mais comum é a 
          // conversão para um arquivop base64

          const reader = new window.FileReader()
          const blob = new Blob(chunks, { type: 'audio/ogg; codec=opus' }) // cria um objeto binário e informa que trata-se de um audio
          reader.readAsDataURL(blob)
          //constrói uma url com dados
          reader.onloadend = () => {
            socket.emit('sendAudio', {
              data: reader.result,
              room: selectedRoom
            })
          }
          chunks = []
        }
      }, err => {
        audioPermission = false
        mediaRecorder = null
      })

    const addRoom = (id, roomName) => {
      $('.room-list').append(`<li class="room-item" data-id="${id}">${roomName}<span class="notifications"></span></li>`)
    }

    //add nova mensagem na tela
    const addMsg = msg => {
      const renderMsg = (type, msg) => {
        if (type === 'text') {
          return msg
        } else if (type === 'audio') {
          return `
          <audio src="${msg}" controls=true></audio>
          `
        }
        return ''

      }
      $('.messages').append(`
        <div class="message">
          <span class="author">${msg.author}</span><br>
          <span class="msg-body">${renderMsg(msg.msgType, msg.message)}</span>
        </div>
      `)
    }

    // get new room
    socket.on('newRoom', room => {
      addRoom(room._id, room.name)
    })

    // get initial list of room
    socket.on('roomList', rooms => {
      $('.room-list').html('')
      rooms.map(room => {
        addRoom(room._id, room.name)
      })
    })

    socket.on('newMsg', msg => {
      if (selectedRoom === msg.room) addMsg(msg)
    })

    socket.on('newAudio', msg => {
      if (selectedRoom === msg.room) addMsg(msg)
    })

    socket.on('msgsList', msgs => {
      $('.messages').html('')
      msgs.map(addMsg)
    })

    $('.add-room').click(() => {
      const roomName = prompt('Informe o nome da sala.')
      if (roomName) {
        socket.emit('addRoom', roomName)
      }
    })

    $('.room-list').on('click', '.room-item', function () {
      const roomId = ($(this).attr('data-id'))
      socket.emit('join', roomId)
      selectedRoom = roomId
    })

    // para lidar com as mensagens

    //enviar com enter
    $('#msg').keyup(function (key) {
      if (selectedRoom !== '' && key.keyCode === 13) {
        socket.emit('sendMsg', {
          msg: $('#msg').val(),
          room: selectedRoom
        })
        $('#msg').val('')
      }
    })

    $('#send-audio').mouseup(function () {
      if (audioPermission && selectedRoom !== '') {
        mediaRecorder.stop()
      }
    })

    $('#send-audio').mousedown(function () {
      if (audioPermission && selectedRoom !== '') {
        mediaRecorder.start()
      }
    })

  })
</script>

</html>